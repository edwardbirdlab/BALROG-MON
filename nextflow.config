/*
This File contains parameters that can be changed to configure the pipeline
*/

// Max resource options
// Defaults only, expecting to be overwritten
params.max_memory                 = '100.GB'
params.max_cpus                   = 16
params.max_time                   = '24.h'


// Required Pipeline Config Settings
params.sample_sheet = '/path/to/samplesheet.csv'

params.project_name = 'DEFUALT_PROJECT'

params.publish_dir_mode = 'defualt' // Options: 'defualt', copy', 'symlink', 'link'  Note: Defualt recommended (copy, exept on resume). When using link (Hardlink) output dir and work dir must be on the same filesystem

params.workflow_opt = 'ont_meta' // (ont_meta, ont_multiqc)

report.overwrite = 'true'

timeline.overwrite = 'true'



// Quality Control Settings

params.ont_min_seq_len = '500' // Only applies to long read sequecning, affects seq len cutoff in chopper
params.ont_average_read_min_qscore = '20' // Minimum average read Qscore - Defualt Q20
params.rename_fastq = true // Renames fastq sequence names to remove fastq description. Usefull for sequencing platforms that generate complex sequence names (ex. ONT)
params.human_removal =true //Preform human sequence removal (Minimap2)
params.single_host_removal =true //Preform host sequence removal (Minimap2)


// Assembly & Plasmid Prediction Options

params.run_metaassembly = true // Perform metagenomic assembly on ONT reads and annotate contigs
params.run_assembly_free = true // Convert reads to Fasta without Assembly and annotate converted reads
params.plasmer_min_len = '500'           //==  Setting the minimum size to be classified in plasmer (defualt/recommended = 500)
params.plasmer_max_len = '500000'        //==  Setting the length at which all contigs greater than this size are automatically considered chromomosomal in orgin (defualt = 500000)
params.chunksize = 10000 // Chunk Size for Plasmer


// Optional Analsis

params.pathogen_detection = true //Preform pathogen detection - Kraken2 will be run to look for pathogens in QCed reads
params.meta_community_analysis =true // Preform metagenomic community analysis using Kraken2 & Bracken
params.mef = true //Preform mobile element finder

// AMR Annotation

params.card_only = false //Preform CARD database only annotation. If this is true multi_amr should be false.
params.multi_amr = true //Preform multi amr database annoation (AMRFINDERPLUS,Resfinder,CARD). If this is true card_only should be false

// Read Binning

params.bin_ont_reads = false //Preform binning of ont reads.
params.lrbinner_kmmer_size = 3         // k value for k-mer frequency vector. Choose between 3 and 5 (default=3)
params.lrbinner_bin_size = 10          // Bin Size for coverage histogram (default=10)
params.lrbinner_bin_count = 32         // Bin Count for coverage histogram (default=32)
params.lrbinner_min_bin_size = 500     // Minimum number of reads a bin should have (default=10000)
params.lrbinner_bin_itterations = 1000 // Number of iterations for cluster search. Use 0 for exhaustive search (default=1000)

// Contig Binning

params.comebin_num_views = '6' // number of views for contrastive multiple-view learning (default=6)



/*
Other Settings (True = Run Aditional Step, False = Don't run it):
*/


//Preform host sequence removal from multiple reference genomes (Kraken2 - Long and Short Reads) NOT IMPLEMENTED YET
params.multi_host_removal =false



//Preform extra taxonomic classification (Kraken2 & GTDB) of sequences (Metagenome Recommend, but can be used on Fq2Fa samples as well)
params.meta_sequence_id = false


/*
Database Settings (True = autodownload, False = supplied in corresponding folder)

This section is not fully tested yet

*/

params.database_dir = ''

//Plasmer (recommend autodownload)
params.db_plasmer = true

//Busco (recommend autodownload)
params.db_buscov5 = true

//Kracken2 (recommend autodownload) If different database is used change RAM requirements as needed in config
params.db_kraken2 = true

//ViralVerify_pfam_db (Can be updated for more up to date plasmid searching, dependent on use)
params.db_viralverify = true

//GTDBtk (Can be updated for more up to date genome identification)
params.db_gtdbtk = true

//resfinder (Reccomend updating for most up to date ARGs)
params.db_resfinder = true

//amrfinder (Reccomend updating for most up to date ARGs)
params.db_amrfinder = true

//card (Reccomend updating for most up to date ARGs)
params.db_card = true

//Kracken2 PlusPF for metagenomic community anlysis (recommend autodownload) If different database is used change RAM requirements as needed in config
params.db_kraken2_pluspf = true


// Load base.config by default for all pipelines
includeConfig 'configs/base_config.cfg'




// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}
